#include <msp430.h>


/**
 * main.c
 * The purpose of this code is to flash an LED on the press of a button and maintain the LED until the button is pressed again.
 * This is achieved by utilizing the Port 1 Vector interrupt and taking advantage of the edge select feature on the development boards.
 * This code works on the MSP430F5529LP
 *
 *NOTE: Recongized a strange debounce on the 1.1 button, may occur during testing
 */
int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // Stop watchdog timer
    P1DIR |= 0X01; //Sets Pin 1.0 (RED LED) to be an output
    P1OUT |= BIT1; //Sets Pin 1.1 (Button) to enable pull up resistor
    P1REN |= BIT1; //Enables Pull up/down resistor
    P1OUT &= ~(0X01); //Sets Pin 1.0 (RED LED) to 0 initially
    P1IE |= BIT1; //Interrupt is enabled on Pin 1.1 (Button)
    P1IES |= BIT1; //Initially sets interrupt edge to go from high to low on PIN 1.1 (Button)


    __enable_interrupt();
    while(1)
    {
    }
}
#pragma vector=PORT1_VECTOR //Port 1 Vector interrupt occurs when Pin 1.1 (Button) goes from high to low
__interrupt void Port_1(void)
{

P1OUT ^= 0X01; // Pin 1.0 (RED LED) is toggled on/off
P1IFG &= ~BIT1; //Flag clear on Pin 1.1 (Button)
}
