#include <msp430.h> 


/**
 * main.c
 * The purpose of this code is to blink two LEDs (Pins 1.0 and 1.6) at a frequency based on the time held by the user.
 * The initial frequency is set to 10HZ and is determined by the time Button 1.3 is held down for.
 * This code is compatible with the MSP430G2553 Board.
 */
int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // Stop watchdog timer
    BCSCTL3 = LFXT1S_2; //Enables crystal

    P1DIR |= 0X41; //Sets Pins 1.0 (GREEN LED) and PIN 1.6 (RED LED) as an output
    P1REN |= BIT3; //Sets Pin 1.3 (Button) to be pull up/down enabled
    P1OUT |= BIT3; //Sets Pin 1.3 (Button) to pull up resistor
    P1OUT |= 0X41; //Sets Pin 1.0 (GREEN LED) and PIN 1.6 (RED LED) to be ON to begin
    P1IE |= BIT3; //Enables interrupt on PIN 1.3 (Button)
    P1IES |= BIT3; //Enables high - to - low behavior on interrupt on Pin 1.3 (BUTTON)
    CCTL0 = CCIE; //Enables interrupts
    CCR0 =  103;  //Set Frequency to 10HZ
    TACTL = TASSEL_1 + MC_1 + ID_3;// ACLK selected, Up-Count Enabled, Divider = 8

__enable_interrupt(); //Enables Interrupts
    while (1) //Infinite while loop
    {
    }
}
//
#pragma vector = TIMER0_A0_VECTOR //Timer Interrupt that is triggered when clock counts up to CCR0 value
    __interrupt void Timer_A ()
    {
        P1OUT ^= 0X41; //Toggle Pin 1.0 and 1.6 (RED and GREEN LEDs)

    }

#pragma vector=PORT1_VECTOR //Port 1 Interrupt that is triggered when Pin 1.3 (BUTTON) changes from high to low
__interrupt void Port_1(void)
//This section of code is reached when the button is initially pressed
{
    if (P1IES & BIT3) //If P1IES AND BIT3 (Button) are 1, it will perform the following code.
    {
        TACTL = TACLR; //Clears any prexisting value stored in Timer A's register
        TACTL = TASSEL_1 + MC_2 + ID_3;  //Changes clock mode to Continuous mode
        P1IES &= ~BIT3; //Sets Port 1's edge select to 0 (Low - to - High)
    }
    else
    {
    CCR0 = TA0R; //Sets value in CCR0 register to the value in Timer A's register
    TACTL = TASSEL_1 + MC_1 + ID_3;  //Reverts clock mode back to Up-Count mode
    P1IES |= BIT3; //Sets Port 1's edge select to 1 (High - to - Low)
    }
    P1IFG &= ~BIT3; //Resets interrupt flag initially triggered
}

