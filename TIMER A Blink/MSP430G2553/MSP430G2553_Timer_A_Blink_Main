#include <msp430.h> 


/**
 * main.c
 * The purpose of this code is to control the speed of two LEDs by pressing a button on the devolpment board.
 * This is achieved by utilizing an Up-Count clock and CCRO register to set the frequency.
 * This code works on the MSP430G2553 board.
 */
int main(void)
{
	WDTCTL = WDTPW | WDTHOLD;	// stop watchdog timer
	BCSCTL3 = LFXT1S_2; //Enables crystal
	P1DIR |= 0X41; //Sets Pins 1.0 (GREEN LED) and 1.6 (RED LED) to be outputs
	P1REN |= BIT3; //Sets Pin 1.3 (Button) to be pull up/down enabled
	P1OUT |= BIT3; //Sets Pin 1.3 (Button) to pull up resistor
	P1OUT |= 0X41; //Sets Pins 1.0 (GREEN LED) and 1.6 (RED LED) to be ON to begin
	P1IE |= BIT3; //Enables interrupt on Pin 1.3 (Button)
	P1IES |= BIT3; //Enables high - to - low behavior on interrupt (Button press)
	CCTL0 = CCIE;// CCR0 interrupt enabled
	CCR0 =  1024; //Sets value in the CCR0 register to be 1HZ initially
	TACTL = TASSEL_1 + MC_1 + ID_3;  // ACLK selected, Up-Count Enabled, Divider = 8

__enable_interrupt(); //Enables interrupts
	while (1) //Infinite while loop
	{
	}
}
#pragma vector = TIMER0_A0_VECTOR //Timer A Interrupt that is triggered when the value in the CCR0 register is met by the clock
	__interrupt void Timer_A ()
	{
	    P1OUT ^= 0X41; //Toggles Pins 1.0 and 1.6 (GREEN and RED LEDs) on and off

	}

#pragma vector=PORT1_VECTOR //Port 1 Interrupt that is triggered when Pin 1.3 is set from high to low (Pressing the button)
__interrupt void Port_1(void)
{
    CCR0 -= 100; //Subtracts the value in the CCR0 register by 100, effectively speeding up the frequency
    P1IFG &= ~BIT3; //Resets interrupt flag initially triggered
        }


