#include <msp430.h> 


/**
 * main.c
 * The purpose of this code is to control the speed of two LEDs by pressing a button on the development board.
 * This is achieved by utilizing an Up-Count clock and CCRO register to set the frequency.
 * This code works on the MSP430FR2311 board.
 */
int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer
    PM5CTL0 &= ~LOCKLPM5; // Disable the GPIO power-on default high-impedance mode
    P1DIR |= 0X01; //Sets Pins 1.0 (GREEN LED)  to be an output
    P2DIR |= 0X01; //Sets Pins 2.0 (RED LED)  to be an output
    P1REN |= BIT1; //Sets Pin 1.1 (Button) to be pull up/down enabled
    P1OUT |= BIT1; //Sets Pin 1.1 (Button) to pull up resistor
    P1OUT |= 0X01; //Sets Pin 1.0 (GREEN LED) to be ON to begin
    P2OUT |= 0X01; //Sets Pin 2.0 (RED LED) to be ON to begin
    P1IE |= BIT1; //Enables interrupt on Pin 1.1 (Button)
    P1IES |= BIT1; //Enables high - to - low behavior on interrupt (Button press)
    TB0CCTL0 = CCIE;// CCR0 interrupt enabled
    TB0CCR0 =  20000; //Sets value in the CCR0 register
    TBCTL = TBSSEL_2 + MC_1 + ID_3;  // SMCLK selected, Up-Count Enabled, Divider = 8

__enable_interrupt(); //Enables interrupts
    while (1) //Infinite while loop
    {
    }
}
#pragma vector = TIMER0_B0_VECTOR //Timer B Interrupt that is triggered when the value in the CCR0 register is met by the clock
    __interrupt void Timer_B ()
    {
        P1OUT ^= 0X01; //Toggles Pin 1.0 (GREEN LED) on and off
        P2OUT ^= 0X01; //Toggles Pin 2.0 (RED LED) on and off

    }

#pragma vector=PORT1_VECTOR //Port 1 Interrupt that is triggered when Pin 1.1 is set from high to low (Pressing the button)
__interrupt void Port_1(void)
{
    TB0CCR0 -= 1000; //Subtracts the value in the CCR0 register by 1000, effectively speeding up the frequency
    P1IFG &= ~BIT1; //Resets interrupt flag initially triggered
        }

